// Express Server for Angular Universal app
import 'zone.js/dist/zone-node';
import * as express from 'express';
import { enableProdMode } from '@angular/core';

// #docregion import-app-server-factory
// AppServerModuleNgFactory, generated by AOT webpack plug-in,
// exists in-memory during build.
// It is not available in the file system at design time
import { AppServerModuleNgFactory } from '../../aot/src/universal/app-server.module.ngfactory';
// #enddocregion import-app-server-factory

import { universalEngine } from './universal-engine';

enableProdMode();

const port = 3200;
const server = express();

// #docregion universal-engine
// Render HTML files with the universal template engine
server.engine('html', universalEngine({
  appModuleFactory: AppServerModuleNgFactory
}));

// engine should find templates in 'dist/' by default
server.set('views', 'dist');
// #enddocregion universal-engine

// CRITICAL TODO: add authentication/authorization middleware

// #docregion data-request
// TODO: implement data requests securely
server.get('/api/*', (req, res) => {
  res.status(404).send('data requests are not supported');
});
// #enddocregion data-request

// #docregion navigation-request
// simplistic regex matches any path without a '.'
const pathWithNoExt = /^([^.]*)$/;

// treat any path without an extension as in-app navigation
server.get(pathWithNoExt, (req, res) => {
  // render with the universal template engine
  res.render('index-universal.html', { req });
});
// #enddocregion navigation-request

// #docregion static
// remaining requests are for static files
server.use((req, res, next) => {
  const fileName = req.originalUrl;
  console.log(fileName);

  // security: only serve files from dist
  const root = 'dist';

  res.sendFile(fileName, { root }, err => {
    if (err) { next(err); }
  });
});
// #enddocregion static

// start the server
server.listen(port, () => {
  console.log(`listening on port ${port}...`);
});
